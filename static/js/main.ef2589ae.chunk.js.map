{"version":3,"sources":["Components/YoutubeIFrame.js","Components/Loader.js","Components/StartBanner.js","Components/RedOutlineButton.js","Components/Dictaphone.js","Components/SimilarWords.js","Components/GenerateQuiz.js","Pages/Home/Home.js","Pages/Zoom/Zoom.js","Pages/Team/Team.js","Pages/About/About.js","Pages/Legal/legal.js","App.js","reportWebVitals.js","index.js"],"names":["YoutubeIFrame","props","videoId","startTimeInSeconds","title","width","height","src","frameBorder","allow","allowFullScreen","Loader","className","role","StartBanner","id","style","href","RedOutlineButton","type","onClick","children","Dictaphone","handleSpeech","useSpeechRecognition","transcript","resetTranscript","SpeechRecognition","browserSupportsSpeechRecognition","startListening","stopListening","SimilarWords","words","payload","axios","post","headers","then","res","console","log","data","catch","err","GenerateQuiz","require","keyNotes","token","lemmaExists","a","lemma","some","el","value","document","text","sentences","phrases","tokens","quiz","keyWords","forEach","sentence","sentence_text","substring","flag","p","phrase","t","lemma_key","replace","toLowerCase","length","question","trim","answer","options","push","q","similar_words","word","synms","slice","shuffleArray","quiz_results","array","i","j","Math","floor","random","temp","_","punctuator","Home","React","useState","setToken","matchedCaptions","setMatchedCaptions","keyMatchedCaptions","setKeyMatchedCaptions","captions","setCaptions","url","setUrl","setVideoId","setPhrase","topics","setTopics","setTranscript","startTime","setStartTime","setKeyNotes","summary","setSummary","setQuiz","matchedCaptionFound","setMatchedCaptionFound","keyMatchedCaptionFound","setKeyMatchedCaptionFound","vis1","setVis1","vis2","setVis2","vis3","setVis3","vis4","setVis4","vis5","setVis5","loader","setLoader","summaryLoader","spLoader","setSpLoader","knLoader","setKnLoader","saLoader","setSaLoader","quizLoader","setQuizLoader","overallSentiment","setOverallSentiment","speech","setSpeech","baseURL","language","getToken","obj","JSON","parse","localStorage","getItem","time_spend","Date","getTime","timestamp","status","object","setItem","stringify","getTranscriptHandler","regExp","match","get","tempTranscript","punctuate","transcripts","getKeyElements","topic","label","error","alert","searchPhraseHandler","englishLangPhrase","lemmas","matches","arr","caption","includes","matchedPhrase","getQuiz","questions","update","vis","itemID","name","placeholder","onChange","e","target","map","comments","commentObjs","items","comObj","snippet","topLevelComment","textDisplay","r","sentiment","sentimentsArray","overall","chartData","meanBy","filter","o","ctx","getElementById","Chart","labels","datasets","backgroundColor","borderColor","borderWidth","er","sort","b","start","prev","html","s","end","getSummary","c","outerText","innerHTML","Zoom","showFile","preventDefault","reader","FileReader","onload","result","times","split","len","min","cap","readAsText","files","word_count","Team","alt","About","Legal","join","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef2589ae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst YoutubeIFrame = (props) => {\r\n    const {videoId, startTimeInSeconds} = props;\r\n    return (\r\n        <iframe title=\"Hackcelerrate\" width=\"100%\" height=\"315\" src={`https://www.youtube.com/embed/${videoId}?start=${startTimeInSeconds}&autoplay=1`}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; autoplay\"\r\n                allowFullScreen/>)\r\n};\r\n\r\nexport default YoutubeIFrame;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return (<div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        </div>\r\n        <div className=\"spinner-grow text-danger\" role=\"status\">\r\n        </div>\r\n    </div>);\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nexport const StartBanner = () =>\r\n    <div id=\"home\">\r\n        <div className=\"container fullheight home\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3 col-xs-12\">\r\n                    <h1 className=\"color-primary\"><b>Stealth AI</b></h1>\r\n                    <p className=\"color-dark fontsize-md\">\r\n                        <span className=\"color-dark fontsize-md\"><i><b>Learning made efficient</b></i></span> <br/>\r\n                        A NLP tool for remove those hassles of finding the most relevant content in the videos and documents.\r\n                    </p>\r\n                    <div style={{\"display\": \"inline-table\"}}>\r\n                         <a href=\"#getstarted\" className=\"button button-v2\">Get Started</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\n\r\nexport const RedOutlineButton = (props) => <button className=\"button button-v3\" type=\"submit\"\r\n                                                   onClick={props.onClick}>{props.children}</button>;","import React from 'react'\r\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition'\r\n\r\nconst Dictaphone = ({handleSpeech}) => {\r\n    const {transcript, resetTranscript} = useSpeechRecognition();\r\n    handleSpeech(transcript);\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button style={{\"display\": \"inline-table\"}} className=\"button button-v3 button-sm\" onClick={SpeechRecognition.startListening}>Speak</button>\r\n                <button style={{\"display\": \"inline-table\"}} className=\"button button-v3 button-sm\"  onClick={()=>{\r\n                    SpeechRecognition.stopListening();\r\n                    resetTranscript();\r\n                }}>Reset</button>\r\n            </div>\r\n\r\n            {transcript ? <p><i>\"{transcript}\"</i></p>: \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport default Dictaphone","import axios from \"axios/index\";\r\nexport const SimilarWords = (words) => {\r\n    const payload = {\r\n        words: words\r\n    }\r\n    const headers = {\r\n        \"accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json; charset=utf-8\"\r\n    }\r\n    return axios.post(`https://ytb-api.azurewebsites.net/api/ytb-similarwords-01`, payload, {headers: headers})\r\n        .then(res => {\r\n            console.log(res);\r\n            if (res.data !== null)\r\n                return res.data;\r\n            else return {};\r\n        }).catch(err => console.log(err));\r\n}","import axios from \"axios/index\";\r\nimport {SimilarWords} from \"./SimilarWords\";\r\n\r\nconst _ = require('lodash');\r\nconst baseURL = \"https://nlapi.expert.ai\";\r\nconst language = \"en\";\r\nexport const GenerateQuiz = async (transcript, keyNotes, token) => {\r\n    const payload = {\r\n        document: {\r\n            text: transcript\r\n        }\r\n    }\r\n    const headers = {\r\n        \"accept\": \"application/json\",\r\n        \"Authorization\": token,\r\n        \"Content-Type\": \"application/json; charset=utf-8\"\r\n    }\r\n    return axios.post(`${baseURL}/v2/analyze/standard/${language}/disambiguation`, payload, {headers: headers})\r\n        .then(async res => {\r\n\r\n            const data = res.data['data'];\r\n            const sentences = data['sentences'];\r\n            const phrases = data['phrases'];\r\n            const tokens = data['tokens'];\r\n            const quiz = {};\r\n            const keyWords = [];\r\n            sentences.forEach(sentence => {\r\n                const sentence_text = transcript.substring(sentence['start'], sentence['end']);\r\n                let flag = false;\r\n                for (let p in sentence['phrases']) {\r\n                    const phrase = phrases[sentence['phrases'][p]];\r\n                    for (let t in phrase['tokens']) {\r\n                        const key = tokens[phrase['tokens'][t]];\r\n                        let lemma = key['lemma'];\r\n                        let lemma_key = lemma.replace(/\\s+/g, '-').toLowerCase();\r\n                        if (!(lemma_key in quiz) && lemmaExists(lemma) && lemma.length > 2 && sentence_text.length > 80) {\r\n                            let question = transcript.substring(sentence['start'], sentence['end']);\r\n                            question = question.replace(lemma, \"__________\").trim()\r\n                            quiz[lemma_key] = {\r\n                                sentence: question,\r\n                                answer: lemma,\r\n                                options: []\r\n                            }\r\n                            keyWords.push(lemma_key);\r\n                            flag = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (flag) break;\r\n                }\r\n            });\r\n            const similar_words = await SimilarWords(keyWords);\r\n            keyWords.forEach(word => {\r\n                let options = similar_words[word].synms.slice(0, 3);\r\n                options.push(quiz[word]['answer']);\r\n                shuffleArray(options);\r\n                if (options.length === 3) options.push(\"None of these\");\r\n                quiz[word]['options'] = options\r\n            });\r\n            const quiz_results = []\r\n            for (let q in quiz) {\r\n                quiz_results.push(quiz[q]);\r\n            }\r\n            console.log(quiz_results);\r\n            return quiz_results;\r\n\r\n        }).catch(err => console.log(err));\r\n\r\n    function lemmaExists(lemma) {\r\n        return keyNotes.some(function (el) {\r\n            return el.value === lemma;\r\n        });\r\n    }\r\n}\r\nconst shuffleArray = (array) => {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n};","import React from \"react\";\r\nimport './Home.css'\r\nimport axios from \"axios/index\";\r\nimport YoutubeIFrame from \"../../Components/YoutubeIFrame\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Chart from \"chart.js\";\r\nimport LanguageSelector from \"../../Components/LanguageSelector\";\r\nimport {StartBanner} from \"../../Components/StartBanner\";\r\nimport {RedOutlineButton} from \"../../Components/RedOutlineButton\";\r\nimport Dictaphone from \"../../Components/Dictaphone\";\r\nimport {SimilarWords} from \"../../Components/SimilarWords\";\r\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition'\r\nimport {GenerateQuiz} from \"../../Components/GenerateQuiz\";\r\n\r\nconst _ = require('lodash');\r\nconst punctuator = require('punctuator');\r\nconst pos = require('pos');\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [token, setToken] = React.useState(\"\");\r\n    const [matchedCaptions, setMatchedCaptions] = React.useState([]);\r\n    const [keyMatchedCaptions, setKeyMatchedCaptions] = React.useState([]);\r\n    const [captions, setCaptions] = React.useState([]);\r\n    const [url, setUrl] = React.useState(\"\");\r\n    const [videoId, setVideoId] = React.useState(\"\");\r\n    const [phrase, setPhrase] = React.useState(\"\");\r\n    const [topics, setTopics] = React.useState([]);\r\n    const [transcript, setTranscript] = React.useState(\"\");\r\n    const [startTime, setStartTime] = React.useState(0);\r\n    const [keyNotes, setKeyNotes] = React.useState([]);\r\n    const [summary, setSummary] = React.useState([]);\r\n    const [quiz, setQuiz] = React.useState([]);\r\n    const [matchedCaptionFound, setMatchedCaptionFound] = React.useState(true);\r\n    const [keyMatchedCaptionFound, setKeyMatchedCaptionFound] = React.useState(true);\r\n    const [langValue, setLangValue] = React.useState(-1);\r\n\r\n    const [vis1, setVis1] = React.useState(false);\r\n    const [vis2, setVis2] = React.useState(false);\r\n    const [vis3, setVis3] = React.useState(false);\r\n    const [vis4, setVis4] = React.useState(false);\r\n    const [vis5, setVis5] = React.useState(false);\r\n    const [loader, setLoader] = React.useState(false);\r\n    const [summaryLoader, setSummaryLoader] = React.useState(false);\r\n    const [spLoader, setSpLoader] = React.useState(false);\r\n    const [knLoader, setKnLoader] = React.useState(false);\r\n    const [saLoader, setSaLoader] = React.useState(false);\r\n    const [quizLoader, setQuizLoader] = React.useState(false);\r\n    const [phraseAutoArray, setPhraseAutoArray] = React.useState([]);\r\n    const [overallSentiment, setOverallSentiment] = React.useState(0);\r\n    const [speech, setSpeech] = React.useState(\"\");\r\n\r\n\r\n    const baseURL = \"https://nlapi.expert.ai\";\r\n    const language = \"en\";\r\n\r\n    const getToken = async () => {\r\n\r\n        let obj = JSON.parse(localStorage.getItem(\"key\"));\r\n        const time_spend = (new Date().getTime() - obj?.timestamp) /1000;\r\n        if (obj === null ||  time_spend > 3600) {\r\n            return axios.post(`https://developer.expert.ai/oauth2/token/`, {\r\n                \"username\": \"sagarbansal099@gmail.com\",\r\n                \"password\": \"h2kvK9hNHJVj!E2\"\r\n            }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }).then(async res => {\r\n                if (res.status === 200) {\r\n                    const t = \"Bearer \" + res.data\r\n                    await setToken(t);\r\n                    var object = {token: t, timestamp: new Date().getTime()}\r\n                    localStorage.setItem(\"key\", JSON.stringify(object));\r\n                    return t;\r\n                }\r\n            });\r\n        } else{\r\n            setToken(obj.token);\r\n            return obj.token;\r\n        }\r\n    }\r\n\r\n    const getTranscriptHandler = async () => {\r\n        const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n        const match = url.match(regExp);\r\n        if (match && match[2].length === 11) {\r\n            setVideoId(match[2]);\r\n            setLoader(true);\r\n            axios.get(`https://ytb-api.azurewebsites.net/api/ytb-t01?video_id=${match[2]}`)\r\n                .then(async res => {\r\n                    setLoader(false)\r\n                    const tempTranscript = punctuator.punctuate(res.data.summary);\r\n                    await setTranscript(tempTranscript);\r\n                    setCaptions(res.data.transcripts);\r\n                    getKeyElements(tempTranscript).then(data => {\r\n                        console.log(data);\r\n                        let topics = [];\r\n                        data['topics'].forEach(topic => {\r\n                            topics.push(topic.label);\r\n                        });\r\n                        setTopics(topics.slice(0, 4));\r\n                        setSummary(data['mainSentences']);\r\n                        setKeyNotes(data['mainLemmas']);\r\n                        setQuiz([]);\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    setLoader(false);\r\n                });\r\n        } else {\r\n            alert(\"Invalid URL\");\r\n            setVideoId(\"\");\r\n        }\r\n    };\r\n\r\n    const getKeyElements = async (transcript) => {\r\n        return getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            return axios.post(`${baseURL}/v2/analyze/standard/${language}/relevants`, payload, {headers: headers})\r\n                .then(res => {\r\n                    return res.data['data'];\r\n                }).catch(err => console.log(err));\r\n        });\r\n\r\n\r\n    }\r\n\r\n    const getKeyNotes = () => {\r\n        setKnLoader(true);\r\n        getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            axios.post(`${baseURL}/v2/analyze/standard/${language}/entities`, payload, {headers: headers})\r\n                .then(res => {\r\n                    setKnLoader(false);\r\n                    let arr = res.data['data']['entities'];\r\n                    const matches = []\r\n                    captions.forEach(caption => {\r\n                        for (let i = 0; i < arr.length; i++) {\r\n                            if (_.includes(caption.text, arr[i].lemma.replace(\"_\", \" \"))) {\r\n                                matches.push({...caption, matchedPhrase: arr[i].lemma});\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                    setKeyMatchedCaptions(matches);\r\n                    setKeyMatchedCaptionFound(matches.length > 0);\r\n                }).catch(err => console.log(err));\r\n        });\r\n    };\r\n    const searchPhraseHandler = async () => {\r\n        let englishLangPhrase = phrase.trim() || speech.trim();\r\n        if (englishLangPhrase.length === 0) {\r\n            setMatchedCaptionFound(englishLangPhrase.length > 0);\r\n            return;\r\n        }\r\n        setSpeech(\"\");\r\n        setPhrase(\"\");\r\n        setSpLoader(true);\r\n        const lemmas = [englishLangPhrase];\r\n        const data = await getKeyElements(englishLangPhrase);\r\n        data['mainLemmas'].forEach(lemma => {\r\n            if (lemma.value !== englishLangPhrase) lemmas.push(lemma.value);\r\n        });\r\n        let matches = [];\r\n        const similar_words = await SimilarWords([lemmas[0]]) || {};\r\n        setSpLoader(false);\r\n        let arr = [...similar_words[lemmas[0]].synms, ...lemmas];\r\n        captions.forEach(caption => {\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (_.includes(caption.text, arr[i].replace(\"_\", \" \"))) {\r\n                    matches.push({...caption, matchedPhrase: arr[i]});\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        setMatchedCaptions(matches);\r\n        setMatchedCaptionFound(matches.length > 0);\r\n    };\r\n\r\n    const getSentimentAnalysis = () => {\r\n        setSaLoader(true);\r\n        axios.get(`https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&maxResults=100&order=relevance&videoId=${videoId}&key=AIzaSyApX3bSpv8b3y1PEiA29VYI5jh1ZEyd7EQ`)\r\n            .then(res => {\r\n                let comments = \"\";\r\n                let commentObjs = res.data.items;\r\n                console.log(commentObjs)\r\n                commentObjs.forEach(comObj => {\r\n                    comments += comObj.snippet.topLevelComment.snippet.textDisplay + \" \"\r\n                });\r\n                getToken().then(t => {\r\n                    const payload = {\r\n                        document: {\r\n                            text: comments\r\n                        }\r\n                    }\r\n                    const headers = {\r\n                        \"accept\": \"application/json\",\r\n                        \"Authorization\": t,\r\n                        \"Content-Type\": \"application/json; charset=utf-8\"\r\n                    }\r\n                    axios.post(`${baseURL}/v2/analyze/standard/${language}/sentiment`, payload, {headers: headers})\r\n                        .then(r => {\r\n                            setSaLoader(false);\r\n                            let sentiment = r.data.data.sentiment;\r\n                            let sentimentsArray = sentiment.items;\r\n                            setOverallSentiment(sentiment.overall);\r\n                            console.log(sentimentsArray)\r\n                            let chartData = [\r\n                                _.meanBy(_.filter(sentimentsArray, o => o.sentiment < -8), o => o.sentiment),\r\n                                _.meanBy(_.filter(sentimentsArray, o => o.sentiment < 0 && o.sentiment >= -8), o => o.sentiment),\r\n                                _.meanBy(_.filter(sentimentsArray, o => o.sentiment < 3 && o.sentiment >= 0), o => o.sentiment),\r\n                                _.meanBy(_.filter(sentimentsArray, o => o.sentiment < 8 && o.sentiment >= 3), o => o.sentiment),\r\n                                _.meanBy(_.filter(sentimentsArray, o => o.sentiment >= 8), o => o.sentiment)\r\n                            ]\r\n                            const ctx = document.getElementById(\"sa-chart\");\r\n                            new Chart(ctx, {\r\n                                type: \"pie\",\r\n                                data: {\r\n                                    labels: [\"Don't even think about it\", \"Not Good\", \"Okaish\", \"Good\", \"Awesome\"],\r\n                                    datasets: [\r\n                                        {\r\n                                            label: \"# of Votes\",\r\n                                            data: chartData,\r\n                                            backgroundColor: [\r\n                                                \"#cfcece\",\r\n                                                \"#f3e5ea\",\r\n                                                \"#fdaac8\",\r\n                                                \"#F9679C\",\r\n                                                \"#ff0560\"\r\n                                            ],\r\n                                            borderColor: [\"Dont even think about it\", \"Not Good\", \"Okaish\", \"Good\", \"Awesome\"],\r\n                                            borderWidth: 1\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(er => console.error(er));\r\n                }).catch(err => console.error(err));\r\n            }).catch(err => console.error(err));\r\n    };\r\n    const getSummary = () => {\r\n        summary.sort((a, b) => {\r\n            if (a.start >= b.start) return 1;\r\n            else return -1;\r\n        });\r\n        let prev = 0;\r\n        let html = [];\r\n        for (let s in summary) {\r\n            const start = summary[s]['start'];\r\n            const end = summary[s]['end'];\r\n            html.push(<span>\r\n                <span>{transcript.substring(prev, start)}</span>\r\n                <br/>\r\n                <span className={'highlight'}>{transcript.substring(start, end)}</span>\r\n            </span>);\r\n            prev = end;\r\n        }\r\n        html.push(<span>{transcript.substring(prev)}</span>);\r\n        return <div>{html}</div>;\r\n    };\r\n\r\n    const getQuiz = async () => {\r\n\r\n        if (quiz.length > 0) return;\r\n        setQuizLoader(true);\r\n\r\n        let questions = await getToken().then(async t => {\r\n            return await GenerateQuiz(transcript, keyNotes, t);\r\n        });\r\n        await setQuiz(questions);\r\n        setQuizLoader(false);\r\n    };\r\n\r\n    const update = (vis) => {\r\n        setVis1(false);\r\n        setVis2(false);\r\n        setVis3(false);\r\n        setVis4(false);\r\n        setVis5(false);\r\n        switch (vis) {\r\n            case 1:\r\n                setVis1(true);\r\n                break;\r\n            case 2:\r\n                setVis2(true);\r\n                break;\r\n            case 3:\r\n                setVis3(true);\r\n                break;\r\n            case 4:\r\n                setVis4(true);\r\n                break;\r\n            case 5:\r\n                setVis5(true);\r\n                break;\r\n        }\r\n\r\n    };\r\n    const handleSpeech = (res) => {\r\n        setSpeech(res);\r\n    }\r\n\r\n    return (<div>\r\n        <StartBanner/>\r\n        <div className=\"container transcript\" id=\"getstarted\">\r\n            <div className=\"text-centre\"><h1 className=\"color-dark\">Get Started</h1></div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"inner\">\r\n                        <label itemID=\"youtubeUrl\">Youtube URL *</label>\r\n                        <input className=\"input\" type=\"url\" name=\"Youtube Url\" id=\"youtubeUrl\" value={url}\r\n                               placeholder=\"Enter Youtube URL\"\r\n                               onChange={(e) => setUrl(e.target.value)}/>\r\n                        <button type=\"submit\" className=\"button button-v2\" onClick={getTranscriptHandler}>Get Video\r\n                        </button>\r\n                        {loader ? <Loader/> : \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"grid-item\">\r\n                        <header className=\"App-header\">\r\n                            {videoId.length === 11 ?\r\n                                <YoutubeIFrame videoId={videoId} startTimeInSeconds={Math.floor(startTime)}/> :\r\n                                <div className=\"dummy\"/>}\r\n                        </header>\r\n                    </div>\r\n                    {topics.length > 0 ? topics.map(topic => <div style={{\"display\": \"inline-table\"}}><span\r\n                        className=\"button button-v4 button-sm\">#{topic}</span></div>) : \"\"}\r\n                </div>\r\n            </div>\r\n            {videoId.length > 0 && transcript.length > 0 ?\r\n                <div>\r\n                    <div className=\"row\" style={{\"margin-bottom\": \"40px\"}}>\r\n                        <h3 className=\"fontsize-md color-dark\">Select Any</h3>\r\n                        <div className=\"col-md-8\">\r\n\r\n                            <div className=\"inline\">\r\n                                {transcript.length > 0 ?\r\n                                    <RedOutlineButton onClick={() => {\r\n                                        getKeyNotes();\r\n                                        update(2)\r\n                                    }}>\r\n                                        Key Notes</RedOutlineButton> : null}\r\n\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <RedOutlineButton onClick={() => {\r\n                                    update(3)\r\n                                }}> Search Phrase\r\n                                </RedOutlineButton>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                {transcript.length > 0 ?\r\n                                    <RedOutlineButton onClick={() => {\r\n                                        update(1);\r\n                                    }}>Get Summary</RedOutlineButton> : null}\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <RedOutlineButton\r\n                                    onClick={() => {\r\n                                        getQuiz();\r\n                                        update(5)\r\n                                    }}>Generate Quiz\r\n                                </RedOutlineButton>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <RedOutlineButton\r\n                                    onClick={() => {\r\n                                        getSentimentAnalysis();\r\n                                        update(4)\r\n                                    }}>Analyse\r\n                                    Sentiment\r\n                                </RedOutlineButton>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {vis1 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Summary</h2>\r\n                                {summaryLoader ? <Loader/> : \"\"}\r\n                                {transcript.length > 0 ? <span>{getSummary()}</span> : \"\"}\r\n                            </div>\r\n                            : \"\"}\r\n                        {vis2 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Key Notes</h2>\r\n                                {knLoader ? <Loader/> : \"\"}\r\n                                {keyMatchedCaptions.map(c => <div style={{\"display\": \"inline-table\"}}>\r\n                                    <button className=\"button button-v3 button-sm\"\r\n                                            onClick={() => setStartTime(c.start)}\r\n                                            type=\"submit\">{c.matchedPhrase} - {c.start}</button>\r\n                                </div>)}\r\n                                {!keyMatchedCaptionFound ? \"Try with a different phrase\" : null}\r\n                            </div> : \"\"\r\n                        }\r\n                        {vis3 ?\r\n                            <div className=\"col-md-12\">\r\n                                <div>\r\n                                    <h2>Search Phrase</h2>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label itemID=\"phrase\">Phrase *</label>\r\n                                            <input className=\"input\" type=\"text\" name=\"Phrase\"\r\n                                                   id=\"phrase\"\r\n                                                   value={phrase}\r\n                                                   placeholder=\"Enter Phrase\"\r\n                                                   onChange={(e) => setPhrase(e.target.value)}/>\r\n                                        </div>\r\n                                        {/*<div className=\"col-md-6\">*/}\r\n                                        {/*    <LanguageSelector langValue={langValue} setLangValue={(v) => {*/}\r\n                                        {/*        setLangValue(parseInt(v));*/}\r\n                                        {/*    }}/>*/}\r\n                                        {/*</div>*/}\r\n                                        <div className=\"col-md-6\">\r\n                                            <label itemID=\"phrase\">Try Speaking Instead</label>\r\n                                            <Dictaphone handleSpeech={handleSpeech}></Dictaphone>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <button className=\"button button-v2\" type=\"submit\"\r\n                                                    onClick={searchPhraseHandler}>Search\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {spLoader ? <Loader/> : \"\"}\r\n                                    {matchedCaptions.map(c => <div style={{\"display\": \"inline-table\"}}>\r\n                                        <button className=\"button button-v3 button-sm\"\r\n                                                onClick={() => setStartTime(c.start)}\r\n                                                type=\"submit\">{c.matchedPhrase} - {c.start}</button>\r\n                                    </div>)}\r\n                                    {!matchedCaptionFound ? \"Try with a different phrase\" : null}\r\n                                </div>\r\n                            </div> : \"\"\r\n                        }\r\n                        {vis4 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Sentimental Analysis</h2>\r\n                                {saLoader ? <Loader/> : \"\"}\r\n                                <div className={\"row\"}>\r\n                                    <div className={\"col-md-7\"}>\r\n                                        <canvas id=\"sa-chart\"/>\r\n                                    </div>\r\n                                    <div className={\"col-md-5\"}>\r\n                                        <h4 className={\"text-centre\"}>Overall Sentiment</h4>\r\n                                        <p className={\"fontsize-lg text-centre color-primary sentiment-score\"}>{overallSentiment}</p>\r\n                                        <p className={\"fontsize-xs text-right\"}>-100 Most Negative <br/> 100 Most\r\n                                            Positive</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \"\"\r\n                        }\r\n                        {vis5 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Quiz</h2>\r\n                                {quizLoader ? <Loader/> : \"\"}\r\n                                <ol>\r\n                                    {quiz.length > 0 ? quiz.map(q => (<li>\r\n                                        <h4 className=\"color-primary fontsize-sm\">{q?.sentence}</h4>\r\n                                        <ol>\r\n                                            {q?.options.map(o => <li onClick={(o) => {\r\n                                                if (o.target.outerText.toLowerCase() === q.answer.toLowerCase() ) {\r\n                                                    document.getElementById(q.answer).innerHTML = 'Your Answer is Correct'\r\n                                                } else document.getElementById(q.answer).innerHTML = 'Incorrect Answer'\r\n                                            }\r\n                                            } className=\"color-dark fontsize-sm option\"\r\n                                                                     style={{\"text-transform\": \"capitalize\"}}>{o}</li>)}\r\n                                        </ol>\r\n                                        <p id={q.answer} className=\"color-primary\"/>\r\n                                    </li>)) : \"Generating Quiz...\"}\r\n                                </ol>\r\n                            </div> : \"\"\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    </div>)\r\n\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport axios from \"axios/index\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport './Zoom.css'\r\nimport {RedOutlineButton} from \"../../Components/RedOutlineButton\";\r\nimport Dictaphone from \"../../Components/Dictaphone\";\r\nimport {SimilarWords} from \"../../Components/SimilarWords\";\r\nimport {GenerateQuiz} from \"../../Components/GenerateQuiz\";\r\n\r\nconst _ = require('lodash');\r\nconst punctuator = require('punctuator');\r\nconst pos = require('pos');\r\nconst baseURL = \"https://nlapi.expert.ai\";\r\nconst language = \"en\";\r\nconst Zoom = () => {\r\n    const [transcript, setTranscript] = React.useState(\"\");\r\n    const [token, setToken] = React.useState(\"\");\r\n    const [matchedCaptions, setMatchedCaptions] = React.useState([]);\r\n    const [keyMatchedCaptions, setKeyMatchedCaptions] = React.useState([]);\r\n    const [captions, setCaptions] = React.useState([]);\r\n    const [phrase, setPhrase] = React.useState(\"\");\r\n    const [topics, setTopics] = React.useState([]);\r\n    const [keyNotes, setKeyNotes] = React.useState([]);\r\n    const [summary, setSummary] = React.useState([]);\r\n    const [quiz, setQuiz] = React.useState([]);\r\n    const [matchedCaptionFound, setMatchedCaptionFound] = React.useState(true);\r\n    const [keyMatchedCaptionFound, setKeyMatchedCaptionFound] = React.useState(true);\r\n    const [vis1, setVis1] = React.useState(false);\r\n    const [vis2, setVis2] = React.useState(false);\r\n    const [vis3, setVis3] = React.useState(false);\r\n    const [vis4, setVis4] = React.useState(false);\r\n    const [vis5, setVis5] = React.useState(false);\r\n    const [loader, setLoader] = React.useState(false);\r\n    const [summaryLoader, setSummaryLoader] = React.useState(false);\r\n    const [spLoader, setSpLoader] = React.useState(false);\r\n    const [knLoader, setKnLoader] = React.useState(false);\r\n    const [saLoader, setSaLoader] = React.useState(false);\r\n    const [quizLoader, setQuizLoader] = React.useState(false);\r\n    const [overallSentiment, setOverallSentiment] = React.useState(0);\r\n    const [speech, setSpeech] = React.useState(\"\");\r\n\r\n    const showFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n            let text = (e.target.result)\r\n            const times = text.match(/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]/g)\r\n            text = text.split(/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]/g);\r\n            const len = Math.min(times.length, text.length);\r\n            let cap = [];\r\n            let t = \"\";\r\n            for (let i = 0; i < len; i++) {\r\n                const data = text[i].trim();\r\n                const start = times[i].trim();\r\n                if (data.length > 4 && start.length > 0) {\r\n                    cap.push({\r\n                        text: data,\r\n                        start: start\r\n                    });\r\n                    t += data + \" \"\r\n                }\r\n            }\r\n            setCaptions(cap);\r\n            setTranscript(t);\r\n        };\r\n        reader.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    const zoomHandler = () => {\r\n        setLoader(true);\r\n        const payload = {\r\n            text: transcript,\r\n            word_count: 500\r\n        }\r\n        const headers = {\r\n            \"accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json; charset=utf-8\"\r\n        }\r\n        axios.post(`https://ytb-api.azurewebsites.net/api/ytb-summary-01`, payload, {headers: headers})\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.data !== null) {\r\n                    setTranscript(res.data['summary']);\r\n                    getKeyElements(transcript).then(data => {\r\n                        setLoader(false);\r\n                        let topics = [];\r\n                        data['topics'].forEach(topic => {\r\n                            topics.push(topic.label);\r\n                        });\r\n                        setTopics(topics.slice(0, 4));\r\n                        setSummary(data['mainSentences']);\r\n                        setKeyNotes(data['mainLemmas']);\r\n                        setQuiz([]);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    const getToken = async () => {\r\n\r\n        let obj = JSON.parse(localStorage.getItem(\"key\"));\r\n        const time_spend = (new Date().getTime() - obj?.timestamp) / 1000;\r\n        if (obj === null || time_spend > 3600) {\r\n            return axios.post(`https://developer.expert.ai/oauth2/token/`, {\r\n                \"username\": \"sagarbansal099@gmail.com\",\r\n                \"password\": \"h2kvK9hNHJVj!E2\"\r\n            }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }).then(async res => {\r\n                if (res.status === 200) {\r\n                    const t = \"Bearer \" + res.data\r\n                    await setToken(t);\r\n                    var object = {token: t, timestamp: new Date().getTime()}\r\n                    localStorage.setItem(\"key\", JSON.stringify(object));\r\n                    return t;\r\n                }\r\n            });\r\n        } else {\r\n            setToken(obj.token);\r\n            return obj.token;\r\n        }\r\n    }\r\n    const getSentimentAnalysis = () => {\r\n        setSaLoader(true);\r\n        getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            axios.post(`${baseURL}/v2/analyze/standard/${language}/sentiment`, payload, {headers: headers})\r\n                .then(r => {\r\n                    setSaLoader(false);\r\n                    let sentiment = r.data.data.sentiment;\r\n                    let sentimentsArray = sentiment.items;\r\n                    setOverallSentiment(sentiment.overall);\r\n                    console.log(sentimentsArray)\r\n                })\r\n                .catch(er => console.error(er));\r\n        }).catch(err => console.error(err));\r\n    };\r\n    const getKeyNotes = () => {\r\n        setKnLoader(true);\r\n        getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            axios.post(`${baseURL}/v2/analyze/standard/${language}/entities`, payload, {headers: headers})\r\n                .then(res => {\r\n                    setKnLoader(false);\r\n                    let arr = res.data['data']['entities'];\r\n                    const matches = []\r\n                    captions.forEach(caption => {\r\n                        for (let i = 0; i < arr.length; i++) {\r\n                            if (_.includes(caption.text, arr[i].lemma.replace(\"_\", \" \"))) {\r\n                                matches.push({...caption, matchedPhrase: arr[i].lemma});\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                    setKeyMatchedCaptions(matches);\r\n                    setKeyMatchedCaptionFound(matches.length > 0);\r\n                }).catch(err => console.log(err));\r\n        });\r\n    };\r\n\r\n    const getSummary = () => {\r\n        summary.sort((a, b) => {\r\n            if (a.start >= b.start) return 1;\r\n            else return -1;\r\n        });\r\n        let prev = 0;\r\n        let html = [];\r\n        for (let s in summary) {\r\n            const start = summary[s]['start'];\r\n            const end = summary[s]['end'];\r\n            html.push(<span>\r\n                <span>{transcript.substring(prev, start)}</span>\r\n                <br/>\r\n                <span className={'highlight'}>{transcript.substring(start, end)}</span>\r\n            </span>);\r\n            prev = end;\r\n        }\r\n        html.push(<span>{transcript.substring(prev)}</span>);\r\n        return <div>{html}</div>;\r\n    };\r\n\r\n    const getQuiz = async () => {\r\n        if (quiz.length > 0) return;\r\n        setQuizLoader(true);\r\n\r\n        let questions = await getToken().then(async t => {\r\n            return await GenerateQuiz(transcript, keyNotes, t);\r\n        });\r\n        await setQuiz(questions);\r\n        setQuizLoader(false);\r\n    };\r\n\r\n    const getKeyElements = async (transcript) => {\r\n        return getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            return axios.post(`${baseURL}/v2/analyze/standard/${language}/relevants`, payload, {headers: headers})\r\n                .then(res => {\r\n                    return res.data['data'];\r\n                }).catch(err => console.log(err));\r\n        });\r\n    }\r\n\r\n    const searchPhraseHandler = async () => {\r\n        let englishLangPhrase = phrase.trim() || speech.trim();\r\n        if (englishLangPhrase.length === 0) {\r\n            setMatchedCaptionFound(englishLangPhrase.length > 0);\r\n            return;\r\n        }\r\n        setSpeech(\"\");\r\n        setPhrase(\"\");\r\n        setSpLoader(true);\r\n        const lemmas = [englishLangPhrase];\r\n        const data = await getKeyElements(englishLangPhrase);\r\n        data['mainLemmas'].forEach(lemma => {\r\n            if (lemma.value !== englishLangPhrase) lemmas.push(lemma.value);\r\n        });\r\n        let matches = [];\r\n        const similar_words = await SimilarWords([lemmas[0]]) || {};\r\n        setSpLoader(false);\r\n        let arr = [...similar_words[lemmas[0]].synms, ...lemmas];\r\n        captions.forEach(caption => {\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (_.includes(caption.text, arr[i].replace(\"_\", \" \"))) {\r\n                    matches.push({...caption, matchedPhrase: arr[i]});\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        setMatchedCaptions(matches);\r\n        setMatchedCaptionFound(matches.length > 0);\r\n    };\r\n\r\n    const update = (vis) => {\r\n        setVis1(false);\r\n        setVis2(false);\r\n        setVis3(false);\r\n        setVis4(false);\r\n        setVis5(false);\r\n        switch (vis) {\r\n            case 1:\r\n                setVis1(true);\r\n                break;\r\n            case 2:\r\n                setVis2(true);\r\n                break;\r\n            case 3:\r\n                setVis3(true);\r\n                break;\r\n            case 4:\r\n                setVis4(true);\r\n                break;\r\n            case 5:\r\n                setVis5(true);\r\n                break;\r\n        }\r\n\r\n    };\r\n    const handleSpeech = (res) => {\r\n        setSpeech(res);\r\n    }\r\n    return (<div>\r\n        <div className=\"container transcript\">\r\n            <div className=\"text-centre\"><h1 className=\"color-dark\">Get Started</h1></div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"inner\">\r\n                        <label itemID=\"youtubeUrl\">Zoom Transcript *</label>\r\n                        <input className=\"input\" type=\"file\" name=\"Zoom Transcript\" id=\"youtubeUrl\"\r\n                               placeholder=\"Select Zoom Transcript\"\r\n                               onChange={async (e) => {\r\n                                   await showFile(e);\r\n                               }}/>\r\n                        <button type=\"submit\" className=\"button button-v2\" onClick={zoomHandler}>Get Started</button>\r\n                        {loader ? <Loader/> : \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"grid-item\">\r\n                        <header className=\"App-header\">\r\n                            {captions.length > 0 ?\r\n                                <div className=\"transcript-zoom\">\r\n                                    {captions.map(cap => (\r\n                                        <div className=\"item\">\r\n                                            <p className=\"fontsize-xs start\">{cap.start}</p>\r\n                                            <p className='fontsize-sm text'>{cap.text}</p>\r\n                                        </div>\r\n                                    ))}\r\n                                </div> :\r\n                                <div className=\"dummy-zoom\"/>}\r\n                        </header>\r\n                    </div>\r\n                    {topics.length > 0 ? topics.map(topic => <div style={{\"display\": \"inline-table\"}}><span\r\n                        className=\"button button-v4 button-sm\">#{topic}</span></div>) : \"\"}\r\n                </div>\r\n            </div>\r\n            {captions.length > 0 && transcript.length > 0 && topics.length > 0 ?\r\n                <div>\r\n                    <div className=\"row\" style={{\"margin-bottom\": \"40px\"}}>\r\n                        <h3 className=\"fontsize-md color-dark\">Select Any</h3>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"inline\">\r\n                                {transcript.length > 0 ?\r\n                                    <RedOutlineButton onClick={() => {\r\n                                        getKeyNotes();\r\n                                        update(2)\r\n                                    }}>\r\n                                        Key Notes</RedOutlineButton> : null}\r\n\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <RedOutlineButton onClick={() => {\r\n                                    update(3)\r\n                                }}> Search Phrase\r\n                                </RedOutlineButton>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                {transcript.length > 0 ?\r\n                                    <RedOutlineButton onClick={() => {\r\n                                        update(1);\r\n                                    }}>Get Summary</RedOutlineButton> : null}\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <RedOutlineButton\r\n                                    onClick={() => {\r\n                                        getQuiz();\r\n                                        update(5)\r\n                                    }}>Generate Quiz\r\n                                </RedOutlineButton>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <RedOutlineButton\r\n                                    onClick={() => {\r\n                                        getSentimentAnalysis();\r\n                                        update(4)\r\n                                    }}>Analyse\r\n                                    Sentiment\r\n                                </RedOutlineButton>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {vis1 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Summary</h2>\r\n                                {summaryLoader ? <Loader/> : \"\"}\r\n                                {transcript.length > 0 ? <span>{getSummary()}</span> : \"\"}\r\n                            </div>\r\n                            : \"\"}\r\n                        {vis2 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Key Notes</h2>\r\n                                {knLoader ? <Loader/> : \"\"}\r\n                                {keyMatchedCaptions.map(c => <div style={{\"display\": \"inline-table\"}}>\r\n                                    <button className=\"button button-v3 button-sm\"\r\n                                            type=\"submit\">{c.matchedPhrase} - {c.start}</button>\r\n                                </div>)}\r\n                                {!keyMatchedCaptionFound ? \"Try with a different phrase\" : null}\r\n                            </div> : \"\"\r\n                        }\r\n                        {vis3 ?\r\n                            <div className=\"col-md-12\">\r\n                                <div>\r\n                                    <h2>Search Phrase</h2>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label itemID=\"phrase\">Phrase *</label>\r\n                                            <input className=\"input\" type=\"text\" name=\"Phrase\"\r\n                                                   id=\"phrase\"\r\n                                                   value={phrase}\r\n                                                   placeholder=\"Enter Phrase\"\r\n                                                   onChange={(e) => setPhrase(e.target.value)}/>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <label itemID=\"phrase\">Try Speaking Instead</label>\r\n                                            <Dictaphone handleSpeech={handleSpeech}></Dictaphone>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <button className=\"button button-v2\" type=\"submit\"\r\n                                                    onClick={searchPhraseHandler}>Search\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {spLoader ? <Loader/> : \"\"}\r\n                                    {matchedCaptions.map(c => <div style={{\"display\": \"inline-table\"}}>\r\n                                        <button className=\"button button-v3 button-sm\"\r\n                                                type=\"submit\">{c.matchedPhrase} - {c.start}</button>\r\n                                    </div>)}\r\n                                    {!matchedCaptionFound ? \"Try with a different phrase\" : null}\r\n                                </div>\r\n                            </div> : \"\"\r\n                        }\r\n                        {vis4 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Sentimental Analysis</h2>\r\n                                {saLoader ? <Loader/> : \"\"}\r\n                                <div className={\"row\"}>\r\n                                    <div className={\"col-md-5\"}>\r\n                                        <h4 className={\"text-centre\"}>Overall Sentiment</h4>\r\n                                        <p className={\"fontsize-lg text-centre color-primary sentiment-score\"}>{overallSentiment}</p>\r\n                                        <p className={\"fontsize-xs text-right\"}>-100 Most Negative <br/> 100 Most\r\n                                            Positive</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> : \"\"\r\n                        }\r\n                        {vis5 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Quiz</h2>\r\n                                {quizLoader ? <Loader/> : \"\"}\r\n                                <ol>\r\n                                    {quiz.length > 0 ? quiz.map(q => (<li>\r\n                                        <h4 className=\"color-primary fontsize-sm\">{q?.sentence}</h4>\r\n                                        <ol>\r\n                                            {q?.options.map(o => <li onClick={(o) => {\r\n                                                if (o.target.outerText === q.answer) {\r\n                                                    document.getElementById(q.answer).innerHTML = 'Your Answer is Correct'\r\n                                                } else document.getElementById(q.answer).innerHTML = 'Incorrect Answer'\r\n                                            }\r\n                                            } className=\"color-dark fontsize-sm option\"\r\n                                                                     style={{\"text-transform\": \"capitalize\"}}>{o}</li>)}\r\n                                        </ol>\r\n                                        <p id={q.answer} className=\"color-primary\"/>\r\n                                    </li>)) : \"Generating Quiz...\"}\r\n                                </ol>\r\n                            </div> : \"\"\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Zoom;","import React from \"react\";\r\nimport {render} from \"@testing-library/react\";\r\nconst Team = () => {\r\n    return (<div>\r\n        <div className=\"container transcript\">\r\n            <div className=\"text-centre\"><h1 className=\"color-dark\">Our Team</h1></div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <img src=\"/team.png\" style={{\"width\": \"100%\"}} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Team;","import React from \"react\";\r\nconst About = () => {\r\n    return (<div>\r\n        <div className=\"container transcript\">\r\n            <div className=\"text-centre\"><h1 className=\"color-dark\">About Stealth AI</h1></div>\r\n            <div className=\"content ins\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5\"><h4>Inspiration</h4></div>\r\n                    <div className=\"col-md-7\"><p>Everyday people watch one billion hours of videos on YouTube and\r\n                        generate billions of views (YouTube,\r\n                        2019). Another interesting fact is that searches related to the term “how to” are growing 70\r\n                        percent\r\n                        year over year, according to searchengineland.com. This means that when users are searching for\r\n                        ways\r\n                        to learn something, they rely on video content.\r\n                        Also in the limits of COVID19, the whole world realizes the power of online education and the\r\n                        impact\r\n                        it can have on millions of people.\r\n                    </p></div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"content sol\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5\"><h4>Solution</h4></div>\r\n                    <div className=\"col-md-7\">The core of the idea is to remove those hassles of finding that “the”\r\n                        moment in the video to give user quick and most relevant content.​\r\n\r\n                        Keeping this in mind with the help of Expert.ai services we want to provide users with a\r\n                        seamless learning experience by giving a fully-fledged solution where searching for queries\r\n                        within the video, key points, video summaries, video sentiments and self-learning checkpoint can\r\n                        be achieved on the go. ​\r\n                        The solution aims to reduce the time and hassles we faced while watching the long educational\r\n                        videos and provide a timeless solution so as to make your learning efficient.\r\n                        <p>\r\n                        </p></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default About;","import React from \"react\";\r\nimport axios from \"axios/index\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport './legal.css'\r\nimport {RedOutlineButton} from \"../../Components/RedOutlineButton\";\r\nimport Dictaphone from \"../../Components/Dictaphone\";\r\nimport {SimilarWords} from \"../../Components/SimilarWords\";\r\nimport {GenerateQuiz} from \"../../Components/GenerateQuiz\";\r\n\r\nconst _ = require('lodash');\r\nconst punctuator = require('punctuator');\r\nconst pos = require('pos');\r\nconst baseURL = \"https://nlapi.expert.ai\";\r\nconst language = \"en\";\r\nconst Legal = () => {\r\n    const [transcript, setTranscript] = React.useState(\"\");\r\n    const [token, setToken] = React.useState(\"\");\r\n    const [keyMatchedCaptions, setKeyMatchedCaptions] = React.useState([]);\r\n    const [captions, setCaptions] = React.useState([]);\r\n    const [topics, setTopics] = React.useState([]);\r\n    const [keyNotes, setKeyNotes] = React.useState([]);\r\n    const [summary, setSummary] = React.useState([]);\r\n    const [keyMatchedCaptionFound, setKeyMatchedCaptionFound] = React.useState(true);\r\n    const [vis1, setVis1] = React.useState(false);\r\n    const [vis2, setVis2] = React.useState(false);\r\n    const [loader, setLoader] = React.useState(false);\r\n    const [summaryLoader, setSummaryLoader] = React.useState(false);\r\n    const [knLoader, setKnLoader] = React.useState(false);\r\n\r\n    const showFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n            let text = (e.target.result);\r\n            text = text.replace(/\\r?\\n|\\r/g, \" \");\r\n            text = text.split('\"').join('');\r\n            console.log(text);\r\n            setCaptions(text);\r\n            setTranscript(text);\r\n        };\r\n        reader.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    const zoomHandler = () => {\r\n        setLoader(true);\r\n        const payload = {\r\n            text: transcript,\r\n            word_count: 500\r\n        }\r\n        const headers = {\r\n            \"accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json; charset=utf-8\"\r\n        }\r\n        axios.post(`https://ytb-api.azurewebsites.net/api/ytb-summary-01`, payload, {headers: headers})\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.data !== null) {\r\n                    setTranscript(res.data['summary']);\r\n                    getKeyElements(res.data['summary']).then(data => {\r\n                        console.log(data);\r\n                        setLoader(false);\r\n                        let topics = [];\r\n                        data['topics'].forEach(topic => {\r\n                            topics.push(topic.label);\r\n                        });\r\n                        setTopics(topics.slice(0, 4));\r\n                        setSummary(data['mainSentences']);\r\n                        setKeyNotes(data['mainLemmas']);\r\n                    });\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n    const getToken = async () => {\r\n\r\n        let obj = JSON.parse(localStorage.getItem(\"key\"));\r\n        const time_spend = (new Date().getTime() - obj?.timestamp) / 1000;\r\n        if (obj === null || time_spend > 3600) {\r\n            return axios.post(`https://developer.expert.ai/oauth2/token/`, {\r\n                \"username\": \"sagarbansal099@gmail.com\",\r\n                \"password\": \"h2kvK9hNHJVj!E2\"\r\n            }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            }).then(async res => {\r\n                if (res.status === 200) {\r\n                    const t = \"Bearer \" + res.data\r\n                    await setToken(t);\r\n                    var object = {token: t, timestamp: new Date().getTime()}\r\n                    localStorage.setItem(\"key\", JSON.stringify(object));\r\n                    return t;\r\n                }\r\n            });\r\n        } else {\r\n            setToken(obj.token);\r\n            return obj.token;\r\n        }\r\n    }\r\n    const getKeyNotes = () => {\r\n        setKnLoader(true);\r\n        getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            axios.post(`${baseURL}/v2/analyze/standard/${language}/entities`, payload, {headers: headers})\r\n                .then(res => {\r\n                    setKnLoader(false);\r\n                    let arr = res.data['data']['entities'];\r\n                    const matches = []\r\n                    for (let i = 0; i < arr.length; i++) {\r\n                        matches.push(arr[i].lemma)\r\n                        // if (_.includes(transcript, arr[i].lemma.replace(\"_\", \" \"))) {\r\n                        //     matches.push({...transcript, matchedPhrase: arr[i].lemma});\r\n                        //     break;\r\n                        // }\r\n                    }\r\n                    setKeyMatchedCaptions(matches);\r\n                    setKeyMatchedCaptionFound(matches.length > 0);\r\n                }).catch(err => console.log(err));\r\n        });\r\n    };\r\n\r\n    const getSummary = () => {\r\n        summary.sort((a, b) => {\r\n            if (a.start >= b.start) return 1;\r\n            else return -1;\r\n        });\r\n        let prev = 0;\r\n        let html = [];\r\n        for (let s in summary) {\r\n            const start = summary[s]['start'];\r\n            const end = summary[s]['end'];\r\n            html.push(<span>\r\n                <span>{transcript.substring(prev, start)}</span>\r\n                <br/>\r\n                <span className={'highlight'}>{transcript.substring(start, end)}</span>\r\n            </span>);\r\n            prev = end;\r\n        }\r\n        html.push(<span>{transcript.substring(prev)}</span>);\r\n        return <div>{html}</div>;\r\n    };\r\n\r\n    const getKeyElements = async (transcript) => {\r\n        return getToken().then(t => {\r\n            const payload = {\r\n                document: {\r\n                    text: transcript\r\n                }\r\n            }\r\n            const headers = {\r\n                \"accept\": \"application/json\",\r\n                \"Authorization\": t,\r\n                \"Content-Type\": \"application/json; charset=utf-8\"\r\n            }\r\n            return axios.post(`${baseURL}/v2/analyze/standard/${language}/relevants`, payload, {headers: headers})\r\n                .then(res => {\r\n                    return res.data['data'];\r\n                }).catch(err => console.log(err));\r\n        });\r\n    }\r\n\r\n    const update = (vis) => {\r\n        setVis1(false);\r\n        setVis2(false);\r\n        switch (vis) {\r\n            case 1:\r\n                setVis1(true);\r\n                break;\r\n            case 2:\r\n                setVis2(true);\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    return (<div>\r\n        <div className=\"container transcript\">\r\n            <div className=\"text-centre\"><h1 className=\"color-dark\">Get Started</h1></div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"inner\">\r\n                        <label itemID=\"youtubeUrl\">Legal Document *</label>\r\n                        <input className=\"input\" type=\"file\" name=\"Zoom Transcript\" id=\"youtubeUrl\"\r\n                               placeholder=\"Select Zoom Transcript\"\r\n                               onChange={async (e) => {\r\n                                   await showFile(e);\r\n                               }}/>\r\n                        <button type=\"submit\" className=\"button button-v2\" onClick={zoomHandler}>Get Started</button>\r\n                        {loader ? <Loader/> : \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"grid-item\">\r\n                        <header className=\"App-header\">\r\n                            {captions.length > 0 ?\r\n                                <div className=\"transcript-legal\">\r\n                                    <p>{captions}</p>\r\n                                </div> :\r\n                                <div className=\"dummy-legal\"/>}\r\n                        </header>\r\n                    </div>\r\n                    {topics.length > 0 ? topics.map(topic => <div style={{\"display\": \"inline-table\"}}><span\r\n                        className=\"button button-v4 button-sm\">#{topic}</span></div>) : \"\"}\r\n                </div>\r\n            </div>\r\n            {captions.length > 0 && transcript.length > 0 && topics.length > 0 ?\r\n                <div>\r\n                    <div className=\"row\" style={{\"margin-bottom\": \"40px\"}}>\r\n                        <h3 className=\"fontsize-md color-dark\">Select Any</h3>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"inline\">\r\n                                {transcript.length > 0 ?\r\n                                    <RedOutlineButton onClick={() => {\r\n                                        getKeyNotes();\r\n                                        update(2)\r\n                                    }}>\r\n                                        Key Notes</RedOutlineButton> : null}\r\n\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                {transcript.length > 0 ?\r\n                                    <RedOutlineButton onClick={() => {\r\n                                        update(1);\r\n                                    }}>Get Summary</RedOutlineButton> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {vis1 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Summary</h2>\r\n                                {summaryLoader ? <Loader/> : \"\"}\r\n                                {transcript.length > 0 ? <span>{getSummary()}</span> : \"\"}\r\n                            </div>\r\n                            : \"\"}\r\n                        {vis2 ?\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Key Notes</h2>\r\n                                {knLoader ? <Loader/> : \"\"}\r\n                                {keyMatchedCaptions.map(c => <div style={{\"display\": \"inline-table\"}}>\r\n                                    <button className=\"button button-v3 button-sm\"\r\n                                            type=\"submit\">{c}</button>\r\n                                </div>)}\r\n                                {!keyMatchedCaptionFound ? \"Try with a different phrase\" : null}\r\n                            </div> : \"\"\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Legal;","import './App.css';\r\nimport React from \"react\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport Zoom from \"./Pages/Zoom/Zoom\";\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport Team from \"./Pages/Team/Team\";\r\nimport About from \"./Pages/About/About\";\r\nimport Legal from \"./Pages/Legal/legal\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n\r\n            <nav className=\"navbar sticky-top navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <a className=\"navbar-brand\" href=\"/\">\r\n                        <img src=\"/logo.png\" height=\"30\"\r\n                             className=\"d-inline-block align-top\" alt=\"\"/>Stealth\r\n                    </a>\r\n\r\n                    <div className=\"collapse navbar-collapse\" style={{\"justify-content\": \"flex-end\"}}\r\n                         id=\"navbarTogglerDemo03\">\r\n                        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/about\">About</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/#getstarted\">Youtube Video</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/Zoom\">Zoom Transcript</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/legal\">Legal Document</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/team\">Team</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route exact path='/zoom'>\r\n                        <Zoom/>\r\n                    </Route>\r\n                    <Route exact path='/legal'>\r\n                        <Legal/>\r\n                    </Route>\r\n                    <Route exact path='/about'>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route exact path='/team'>\r\n                        <Team/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            <div className=\"footer\">\r\n                <div className=\"container\"><img src=\"/logo.png\" height=\"20\"\r\n                             className=\"d-inline-block align-top\" alt=\"\"/>Stealth</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}